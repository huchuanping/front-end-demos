webpackJsonp([5],{192:function(n,t,e){"use strict";var a=e(13),o=a.extend({template:e(454),ready:function(){var n=a.extend({template:'<div>I am {{name}}</div> data from init: {{msg}}<br/>换变的的传入数据：{{changableMsg}}<br><input type="text" v-model="canChangeParentMsg"><br><button @click="notify">向父组件发事件</button><hr>',props:["msg","changableMsg","canChangeParentMsg"],data:function(){return{name:"hello world component"}},methods:{notify:function(){this.$dispatch("child-msg","I am child, can you hear me?")}},events:{"parent-msg":function(n){console.log("接受到msg: %s",n)}}});a.component("my-component",n),a.component("my-component2",{template:"#c2"}),a.component("async-component",function(n,t){setTimeout(function(){n({template:"<div>I am async!</div>"})},1e3)}),new a({el:".my-component-wrap",data:{sth:"Haha!",parMsg:"aaa"},events:{"child-msg":function(n){console.log("接受到msg: %s",n),this.$broadcast("parent-msg","I am parent. I hear You")}}})}});n.exports=o},454:function(n,t){n.exports='<div class=my-component-wrap> <input type=text v-model=sth> {{parMsg}} <my-component msg="some msg!" :changable-msg=sth :can-change-parent-msg.sync=parMsg></my-component> <my-component2></my-component2> <table v-if=false> <tr is=my-component></tr> </table> <hr> <h2>异步组件</h2> <async-component></async-component> </div> <script type=text/x-template id=c2><h2> tempalte~</h2>\r\n  <p>hahaha</p></script>'}});